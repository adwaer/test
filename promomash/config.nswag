{
  "runtime": "NetCore21",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"version\": \"v1\",\r\n    \"title\": \"Promomash Identity API\"\r\n  },\r\n  \"paths\": {\r\n    \"/api/Countries\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Countries\"\r\n        ],\r\n        \"summary\": \"Get all countries\",\r\n        \"operationId\": \"Get\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"text/plain\",\r\n          \"application/json\",\r\n          \"text/json\"\r\n        ],\r\n        \"parameters\": [],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"uniqueItems\": false,\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/CountryViewModel\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Countries/{countryId}/Provinces\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Provinces\"\r\n        ],\r\n        \"summary\": \"Get provinces\",\r\n        \"operationId\": \"Get\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"text/plain\",\r\n          \"application/json\",\r\n          \"text/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"countryId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"uniqueItems\": false,\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/CountryViewModel\"\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ErrorResponse\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Users\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Creates a new user.\",\r\n        \"operationId\": \"CreateUser\",\r\n        \"consumes\": [\r\n          \"application/json-patch+json\",\r\n          \"application/json\",\r\n          \"text/json\",\r\n          \"application/*+json\"\r\n        ],\r\n        \"produces\": [\r\n          \"text/plain\",\r\n          \"application/json\",\r\n          \"text/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"createAccountRequest\",\r\n            \"in\": \"body\",\r\n            \"description\": \"Query model 'Create account'.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/CreateAccountRequest\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/UserTokenQueryResult\"\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ErrorResponse\"\r\n            }\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ProblemDetails\"\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ErrorResponse\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"CountryViewModel\": {\r\n      \"description\": \"Country model\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"format\": \"int32\",\r\n          \"description\": \"Id\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"description\": \"Name\",\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"ErrorResponse\": {\r\n      \"description\": \"Response model 'Error'.\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"message\": {\r\n          \"description\": \"Error description.\",\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"CreateAccountRequest\": {\r\n      \"description\": \"Query model 'Create account'.\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"email\": {\r\n          \"description\": \"Email\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"password\": {\r\n          \"description\": \"Password\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"confirmPassword\": {\r\n          \"description\": \"Password Confirmation\",\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"UserTokenQueryResult\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"token\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        }\r\n      }\r\n    },\r\n    \"ProblemDetails\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"title\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"detail\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"instance\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"additionalProperties\": {\r\n        \"type\": \"object\"\r\n      }\r\n    }\r\n  },\r\n  \"securityDefinitions\": {\r\n    \"Bearer\": {\r\n      \"name\": \"Authorization\",\r\n      \"in\": \"header\",\r\n      \"type\": \"apiKey\",\r\n      \"description\": \"Please enter JWT with Bearer into field\"\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"Bearer\": []\r\n    }\r\n  ]\r\n}",
      "url": "http://localhost:5000/swagger/v1/swagger.json",
      "output": null
    }
  },
  "codeGenerators": {
    "openApiToTypeScriptClient": {
      "className": "{controller}Client",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 2.7,
      "template": "Angular",
      "promiseType": "Promise",
      "httpClass": "HttpClient",
      "useSingletonProvider": false,
      "injectionTokenType": "InjectionToken",
      "rxJsVersion": 6.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": false,
      "exportTypes": true,
      "wrapDtoExceptions": false,
      "exceptionClass": "ApiException",
      "clientBaseClass": null,
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "protectedMethods": [],
      "configurationClass": null,
      "useTransformOptionsMethod": false,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Class",
      "classTypes": [],
      "extendedClasses": [],
      "extensionCode": null,
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "API_BASE_URL",
      "queryNullValue": "",
      "inlineNamedDictionaries": false,
      "inlineNamedAny": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null
    }
  }
}